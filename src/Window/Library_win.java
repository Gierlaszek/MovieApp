/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Window;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import DateBase.JDBC;
import DateBase.inCorrect;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author kamil
 */
public class Library_win extends JFrame
{

    /**
     * Creates new form Library_win
     */
    public Library_win(JFrame parent)
    {
        initComponents();
        parent.dispose();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Delete = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Edit = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(450, 300, 0, 0));

        Delete.setText("Delete");

        jButton3.setText("Export library");

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Edit.setText("Edit");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title ", "Year", "RunTime", "Genre", "Director", "Country", "Rate", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table);
        addRow();
        sort();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Add))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(138, 138, 138)
                .addComponent(Edit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete)
                    .addComponent(jButton3)
                    .addComponent(Cancel)
                    .addComponent(Add)
                    .addComponent(Edit))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //close this window and open previous
    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        this.dispose();
        new Menu_win().setVisible(true);
    }//GEN-LAST:event_CancelActionPerformed

    //close this window and open next
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        this.dispose();
        new More_info_win(this).setVisible(true);    
        
    }//GEN-LAST:event_AddActionPerformed

    //create sort by title, year and rate 
    private void sort()
    {
        
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(table.getModel());
//        table.setRowSorter(sorter);
        
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        
        sorter.setSortKeys(sortKeys);
        
        sorter.setSortable(2, false);
        sorter.setSortable(3, false);
        sorter.setSortable(4, false);
        sorter.setSortable(5, false);
        sorter.setSortable(7, false);
        sorter.sort();
    }
    
    
    
    //create action when open window and read record from Database to table
    private void addRow()
    {
        //download parametrs from class JDBC
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        try
        {
            JDBC jdbc = new JDBC("read");
            map_database = jdbc.getMap();
            key = jdbc.getKey();
            amount = jdbc.amount_rows();
        }
        catch (SQLException ex)
        {
            System.out.println("Error ! Doesn't connect with database !");
        } 
        catch(inCorrect e)
        {
            //this caught will never work
        }
            
        //print record in table
        for(int i = 0; i <  amount; i++)
        {
            Vector row = new Vector();
            for(String key : key)
            {
                row.add(map_database.get(key).get(i));
            }
            model.addRow(row);
        }
        

    }
    /**
     * @param args the command line arguments
     */

    private int amount = 0;
    private List<String> key;
    private Map<String, List<String>> map_database = new HashMap<String, List<String>>();
    private JFrame thisFrame = this;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Delete;
    private javax.swing.JCheckBox Edit;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
